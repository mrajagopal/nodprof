// Generated by CoffeeScript 1.6.3
var CORSify, Services, VENDOR, WWWDIR, config, defaultConfig, express, getFile, getFiles, heapSnapshot, logger, path, profileStart, profileStop;

path = require("path");

express = require("express");

Services = require("./services").Services;

logger = require("../common/logger");

config = require("./config");

WWWDIR = path.join(__dirname, "../../www");

VENDOR = path.join(__dirname, "../../vendor");

defaultConfig = config.getConfiguration([]).config;

module.exports = function(config) {
  var app;
  if (config == null) {
    config = defaultConfig;
  }
  app = express();
  app.on("error", function(error) {
    return logger.log(error);
  });
  app.set("services", new Services(config));
  app.use(CORSify);
  app.get("/api/files", getFiles);
  app.get("/api/files/:file.json", getFile);
  app.post("/api/profileStart", profileStart);
  app.post("/api/profileStop", profileStop);
  app.post("/api/heapSnapshot", heapSnapshot);
  app.use(express["static"](WWWDIR));
  app.use("/vendor", express["static"](VENDOR));
  return app;
};

getFiles = function(request, response) {
  var services;
  services = request.app.get("services");
  services.getFiles(function(err, data) {
    var message;
    if (err != null) {
      message = "error processing getFiles(): " + err;
      logger.log(message);
      response.send(500, message);
      return;
    }
    return response.send(data);
  });
};

getFile = function(request, response) {
  var fileName, services;
  services = request.app.get("services");
  fileName = "" + request.params.file + ".json";
  return services.getFile(fileName, function(err, data) {
    var message;
    if (err != null) {
      message = "error processing getFile(" + fileName + "): " + err;
      logger.log(message);
      response.send(500, message);
      return;
    }
    return response.send(data);
  });
};

profileStart = function(request, response) {
  var services;
  services = request.app.get("services");
  services.profileStart();
  response.send("profile started");
};

profileStop = function(request, response) {
  var services;
  services = request.app.get("services");
  services.profileStop();
  response.send("profile stopped");
};

heapSnapshot = function(request, response) {
  var services;
  services = request.app.get("services");
  services.heapSnapshot();
  response.send("heap snapshot generated");
};

CORSify = function(request, response, next) {
  response.header("Access-Control-Allow-Origin:", "*");
  response.header("Access-Control-Allow-Methods", "OPTIONS, GET, POST");
  next();
};
